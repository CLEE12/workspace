/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-04-25 07:20:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import project.*;
import java.util.Calendar;
import java.util.List;
import java.util.Date;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("project");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");

	Calendar now = Calendar.getInstance();
	int year = now.get(Calendar.YEAR);
	int month = now.get(Calendar.MONTH) + 1;
	
	//캘린더 년도설정
	String _year = request.getParameter("year");
	if (_year != null) year = Integer.parseInt(_year);
	
	//캘린더 월설정
	String _month = request.getParameter("month");
	if (_month != null) month = Integer.parseInt(_month);
	
	//출력할 년도, 월로 설정
	now.set(year, month - 1, 1);	
	//변화된 년
	year = now.get(Calendar.YEAR);
	//변화된 월
	month = now.get(Calendar.MONTH) + 1;
	
	//해당월의 마지막 날짜
	int end = now.getActualMaximum(Calendar.DAY_OF_MONTH);
	
	//1~7(일~토)
	int w = now.get(Calendar.DAY_OF_WEEK);
	
	//로그인 계정명
	String email=request.getParameter("email");

      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar year = document.getElementById(\"select_year\").innerHTML;\n");
      out.write("\tvar month = document.getElementById(\"select_month\").innerHTML;\n");
      out.write("\tvar date = date.innerHTML;\n");
      out.write("\t\n");
      out.write("\tfunction onload_fn() {\n");
      out.write("\t\tcalendar(2016, 1);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction getValue(date) {\n");
      out.write("\t\tyear = document.getElementById(\"select_year\").innerHTML;\n");
      out.write("\t\tmonth = document.getElementById(\"select_month\").innerHTML;\n");
      out.write("\t\tdate = date.innerHTML;\n");
      out.write("\t\talert(year + '년 ' + month + '월 ' + date + '일 ');\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//좌측 달력생성\n");
      out.write("\tfunction calendar(year, month) {\n");
      out.write("\t\tvar tags = \"<table cellspacing='0' border='1' onclick='cal();' style='cursor:pointer'>\";\n");
      out.write("\t\ttags += \"<tr><th>일</th><th>월</th><th> 화</th><th>수</th><th>목</th><th>금</th><th>토</th></tr><tr>\";\n");
      out.write("\t\tvar date = new Date();\n");
      out.write("\t\tdate.setFullYear(year, month, 1);\n");
      out.write("\t\tvar day = date.getDay();\n");
      out.write("\t\tfor (var i = 0; i < day; i++) {\n");
      out.write("\t\t\ttags += '<td></td>';\n");
      out.write("\t\t}\n");
      out.write("\t\twhile (date.getMonth() == month) {\n");
      out.write("\t\t\tif (date.getDate() != 1 && date.getDay() == 0) {\n");
      out.write("\t\t\t\ttags += '</tr><tr>';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\ttags += '<td onclick=\"getValue(this)\">' + date.getDate() + '</td>';\n");
      out.write("\t\t\tdate.setDate(date.getDate() + 1);\n");
      out.write("\t\t}\n");
      out.write("\t\tvar days = date.getDay();\n");
      out.write("\t\tif (days != 0) {\n");
      out.write("\t\t\tvar last = 6 - days + 1;\n");
      out.write("\t\t\tfor (var i = 0; i < last; i++) {\n");
      out.write("\t\t\t\ttags += '<td></td>';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\ttags += '</tr></table>';\n");
      out.write("\t\tvar c = document.getElementById(\"test\");\n");
      out.write("\t\tc.innerHTML = tags;\n");
      out.write("\t}\n");
      out.write("\t\t\n");
      out.write("\tfunction before_month() {\n");
      out.write("\t\tvar year = window.document.getElementById(\"select_year\");\n");
      out.write("\t\tvar month = window.document.getElementById(\"select_month\");\n");
      out.write("\t\tif (month.innerHTML == 1) {\n");
      out.write("\t\t\tmonth.innerHTML = 12;\n");
      out.write("\t\t\tyear.innerHTML = parseInt(year.innerHTML) - 1;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tmonth.innerHTML = parseInt(month.innerHTML) - 1;\n");
      out.write("\t\t}\n");
      out.write("\t\tcalendar(year.innerHTML, parseInt(month.innerHTML) - 1);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction after_month() {\n");
      out.write("\t\tvar year = window.document.getElementById(\"select_year\");\n");
      out.write("\t\tvar month = window.document.getElementById(\"select_month\");\n");
      out.write("\t\tif (month.innerHTML == 12) {\n");
      out.write("\t\t\tmonth.innerHTML = 1;\n");
      out.write("\t\t\tyear.innerHTML = parseInt(year.innerHTML) + 1;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tmonth.innerHTML = parseInt(month.innerHTML) + 1;\n");
      out.write("\t\t}\n");
      out.write("\t\tcalendar(year.innerHTML, parseInt(month.innerHTML) - 1);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction fnOpenPop(seq,day){\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tvar strdd = (100+day).toString().substring(1);\n");
      out.write("\t\tvar strmm = (100+");
      out.print(month);
      out.write(").toString().substring(1);\n");
      out.write("\t\tvar strDate = \"");
      out.print(year);
      out.write("-\"+strmm+\"-\"+strdd;\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tvar url = \"ShceduleInfoPop.jsp?email=");
      out.print(email);
      out.write("&getdate=\"+strDate+\"&seq=\";\n");
      out.write("\t\t\n");
      out.write("\t\tif(seq > 0){\n");
      out.write("\t\t\turl = url+seq;\n");
      out.write("\t\t}\n");
      out.write("\t\telse{\n");
      out.write("\t\t\turl = url+\"0\";\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\twindow.open(url,'insertPop','scrollbars=no,toolbar=no,resizable=yes,width=500,height=500,left=100,top=100');\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction fnOpenPop2(id){\t\t\n");
      out.write("\t\tvar url = \"WriteForm.jsp?email=\"+id;\n");
      out.write("\t\twindow.open(url,'insertPop','scrollbars=no,toolbar=no,resizable=yes,width=500,height=500,left=100,top=100');\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body onload=\"onload_fn()\">\n");
      out.write("\t<table width=\"100%\" height=\"100%\" border=\"1\" cellspacing=\"0\"\n");
      out.write("\t\tcellpadding=\"0\">\n");
      out.write("\t\t<tr align=\"center\">\n");
      out.write("\t\t\t<td style=\"font-size: 16; font-weight: bold; padding-left: 10;\"\n");
      out.write("\t\t\t\talign=\"left\">");
      out.print(email);
      out.write("님 환영합니다. <input type=\"button\" name=\"logout\"\n");
      out.write("\t\t\t\tvalue=\"로그아웃\"> <input type=\"text\"\n");
      out.write("\t\t\t\tstyle=\"width: 120; height: 20; border: 1px solid #aaaaaa;\">\n");
      out.write("\t\t\t\t<input type=\"button\" name=\"검색\" value=\"검색\">\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr align=\"center\">\n");
      out.write("\t\t\t<td>\n");
      out.write("\t\t\t\t<table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td width=\"15%\" valign=\"top\" id=\"leftmenutd\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\" name=\"일정\" value=\"일정쓰기\" onclick=\"location.href='WriteForm.jsp?email=");
      out.print(email);
      out.write("'\">\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\" name=\"일정\" value=\"일정쓰기2\" onclick=\"fnOpenPop2('");
      out.print(email);
      out.write("')\">\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" name=\"페이지\" value=\"마이페이지\" onclick=\"location.href='Mypage.jsp?email=");
      out.print(email);
      out.write("'\"><br><br>\n");
      out.write("\t\t\t\t\t\t\t<div style='cursor:pointer'>\n");
      out.write("\t\t\t\t\t\t\t\t<span onclick=\"before_month();\">◀</span>\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"select_year\">2016</span>년\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"select_month\">1</span> 월 \n");
      out.write("\t\t\t\t\t\t\t\t<span onclick=\"after_month();\">▶</span>\n");
      out.write("\t\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\t<div id='test'></div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td width=\"85%\">\n");
      out.write("\t\t\t\t\t\t\t<br />&nbsp;<br />\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<center>\n");
      out.write("\t\t\t\t\t\t\t\t<table width=\"210\" border=\"0\" cellpadding=\"1\" cellspacing=\"2\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr height=\"30\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a href=\"Main.jsp?year=");
      out.print(year);
      out.write("&month=");
      out.print(month - 1);
      out.write("&email=");
      out.print(email);
      out.write("\">◀</a>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<b>");
      out.print(year);
      out.write('년');
      out.write(' ');
      out.write(' ');
      out.print(month);
      out.write("월</b>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a href=\"Main.jsp?year=");
      out.print(year);
      out.write("&month=");
      out.print(month + 1);
      out.write("&email=");
      out.print(email);
      out.write("\">▶</a></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t</table>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<table width=\"210\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\"\n");
      out.write("\t\t\t\t\t\t\t\t\tbgcolor=\"#cccccc\" style='cursor:pointer'>\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr height=\"25\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\"><font color=\"red\">일</font></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\">월</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\">화</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\">수</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\">목</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\">금</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\" bgcolor=\"#e6e4e6\"><font color=\"blue\">토</font></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t");

										SimpleDateFormat calFormat = new SimpleDateFormat("yyyyMMdd");
										String Sdate = "";
										String Edate = "";
										
										Calendar searchDate = Calendar.getInstance();
										
										//시작일
										searchDate.set(year, month-1, 1);
										searchDate.set(Calendar.MILLISECOND, 0);
										Sdate = calFormat.format(searchDate.getTime());
										
										//종료일
										searchDate.set(year, month-1, end);
										searchDate.set(Calendar.MILLISECOND, 0);
										Edate = calFormat.format(searchDate.getTime());
										
										//디비호출
										List<Schedule> list = null;
										ScheduleDao sd = ScheduleDao.getInstance();
										list = sd.selectList(email ,Sdate ,Edate);
										
										String getDayDate = "";
										String getDaySeq = ""; 
										for (Schedule sc : list) {
											getDayDate = getDayDate + "," +sc.getReg_day();
											getDaySeq = getDaySeq + "," +sc.getSeq();
										}
										
										String[] seqValues = new String[list.size()];																				
										if(getDayDate.length() > 0){
											getDayDate = getDayDate.substring(1);
											getDaySeq = getDaySeq.substring(1);
											seqValues = getDaySeq.split(",");
										}
										
										int newLine = 0;
										//1일이 어느 요일에서 시작하느냐에 따른 빈칸 삽입
										out.println("<tr height='25'>");
										for (int i = 1; i < w; i++) {
											out.println("<td bgcolor='#ffffff'>&nbsp;</td>");
											newLine++;
										}

										String fc, bg ,cg;
										String checkDay = "";
										int seqCnt = 0;
										for (int i = 1; i <= end; i++) {																						
											
											fc = (newLine == 0) ? "red" : (newLine == 6 ? "blue" : "#000000");
											bg = "#ffffff";
											cg = "#B2CCFF";
											
											if(i < 10){
												checkDay = "0" + i;
											}
											else{
												checkDay = Integer.toString(i);
											}
											
											//등록된 항목 분기처리
											if(getDayDate.indexOf(checkDay) > -1){
												out.println("<td onClick='fnOpenPop("+seqValues[seqCnt]+","+i+")' align='center' bgcolor=" + cg +" ><font color=" + fc + ">" + i + "</font></td>");
												seqCnt++;
											}
											else{
												out.println("<td onClick='fnOpenPop(0,"+i+")' align='center' bgcolor=" + bg + "><font color=" + fc + ">" + i + "</font></td>");
											}
											
											newLine++; 
											if (newLine == 7 && i != end) {
												out.println("</tr>");
												out.println("<tr height='25'>");
												newLine = 0;
											}
										}

										while (newLine > 0 && newLine < 7) {
											out.println("<td bgcolor='ffffff'>&nbsp;</td>");
											newLine++;
										}
										out.println("</tr>");
									
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t\t</center>\n");
      out.write("\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr align=\"center\">\n");
      out.write("\t\t\t<td style=\"border-top: 1px solid #cccccc; font-weight: bold;\"><b>check\n");
      out.write("\t\t\t\t\t- mate</b></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
